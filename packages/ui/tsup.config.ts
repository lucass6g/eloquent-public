import {defineConfig, build} from 'tsup';

export default defineConfig((options) => {
    const formatString = Array.isArray(options.format)
        ? options.format.join("-")
        : options.format ?? "esm";
    return {
        name: "@eloquent/ui",
        entry: {
            // index: "src/index.ts",
            Accordion: "src/components/Accordion/index.tsx",
            Alert: "src/components/Alert/index.tsx",
            AlertDialog: "src/components/AlertDialog/index.tsx",
            AspectRatio: "src/components/AspectRatio/index.tsx",
            Avatar: "src/components/Avatar/index.tsx",
            Badge: "src/components/Badge/index.tsx",
            Breadcrumb: "src/components/Breadcrumb/index.tsx",
            Button: "src/components/Button/index.tsx",
            Calendar: "src/components/Calendar/index.tsx",
            Card: "src/components/Card/index.tsx",
            Carousel: "src/components/Carousel/index.tsx",
            Checkbox: "src/components/Checkbox/index.tsx",
            Collapsible: "src/components/Collapsible/index.tsx",
            Command: "src/components/Command/index.tsx",
            ContextMenu: "src/components/ContextMenu/index.tsx",
            Dialog: "src/components/Dialog/index.tsx",
            Drawer: "src/components/Drawer/index.tsx",
            DropdownMenu: "src/components/DropdownMenu/index.tsx",
            Form: "src/components/Form/index.tsx",
            HoverCard: "src/components/HoverCard/index.tsx",
            Input: "src/components/Input/index.tsx",
            InputOtp: "src/components/InputOtp/index.tsx",
            Label: "src/components/Label/index.tsx",
            Menubar: "src/components/Menubar/index.tsx",
            NavigationMenu: "src/components/NavigationMenu/index.tsx",
            Pagination: "src/components/Pagination/index.tsx",
            Popover: "src/components/Popover/index.tsx",
            Progress: "src/components/Progress/index.tsx",
            RadioGroup: "src/components/RadioGroup/index.tsx",
            Resizable: "src/components/Resizable/index.tsx",
            ScrollArea: "src/components/ScrollArea/index.tsx",
            Select: "src/components/Select/index.tsx",
            Separator: "src/components/Separator/index.tsx",
            Sheet: "src/components/Sheet/index.tsx",
            Skeleton: "src/components/Skeleton/index.tsx",
            Slider: "src/components/Slider/index.tsx",
            Sonner: "src/components/Sonner/index.tsx",
            Switch: "src/components/Switch/index.tsx",
            Table: "src/components/Table/index.tsx",
            Tabs: "src/components/Tabs/index.tsx",
            Textarea: "src/components/Textarea/index.tsx",
            Toast: "src/components/Toast/index.tsx",
            Toaster: "src/components/Toaster/index.tsx",
            Toggle: "src/components/Toggle/index.tsx",
            ToggleGroup: "src/components/ToggleGroup/index.tsx",
            Tooltip: "src/components/Tooltip/index.tsx",
            Typography: "src/components/Typography/index.ts",
            useToast: "src/components/use-toast.ts",
        },
        format: options.format ?? ["esm"],
        external: ["react", "react-dom", "react-hook-form"],
        minify: false,
        tsconfig: `tsconfig-${formatString ?? "esm"}.json`,
        clean: true,
        dts: true,
        target: "es2022",
        silent: false,
        outDir: `dist/${formatString ?? "esm"}`,
    }
})